/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
#define JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_

#include <jsonrpccpp/server.h>

class AbstractStubServer : public jsonrpc::AbstractServer<AbstractStubServer>
{
    public:
        AbstractStubServer(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AbstractStubServer>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("FileLookUp", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "fhandle",jsonrpc::JSON_STRING,"filename",jsonrpc::JSON_STRING,"owner_vsID",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::FileLookUpI);
            this->bindAndAddMethod(jsonrpc::Procedure("GetVote", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "content",jsonrpc::JSON_INTEGER,"fhandle",jsonrpc::JSON_STRING,"filename",jsonrpc::JSON_STRING,"owner_vsID",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::GetVoteI);
            this->bindAndAddMethod(jsonrpc::Procedure("CommitOrAbort", jsonrpc::PARAMS_BY_NAME, jsonrpc::JSON_OBJECT, "content",jsonrpc::JSON_INTEGER,"fhandle",jsonrpc::JSON_STRING,"filename",jsonrpc::JSON_STRING,"owner_vsID",jsonrpc::JSON_STRING, NULL), &AbstractStubServer::CommitOrAbortI);
        }

        inline virtual void FileLookUpI(const Json::Value &request, Json::Value &response)
        {
            response = this->FileLookUp(request["fhandle"].asString(), request["filename"].asString(), request["owner_vsID"].asString());
        }
        inline virtual void GetVoteI(const Json::Value &request, Json::Value &response)
        {
            response = this->GetVote(request["content"].asInt(), request["fhandle"].asString(), request["filename"].asString(), request["owner_vsID"].asString());
        }
        inline virtual void CommitOrAbortI(const Json::Value &request, Json::Value &response)
        {
            response = this->CommitOrAbort(request["content"].asInt(), request["fhandle"].asString(), request["filename"].asString(), request["owner_vsID"].asString());
        }
        virtual Json::Value FileLookUp(const std::string& fhandle, const std::string& filename, const std::string& owner_vsID) = 0;
        virtual Json::Value GetVote(int content, const std::string& fhandle, const std::string& filename, const std::string& owner_vsID) = 0;
        virtual Json::Value CommitOrAbort(int content, const std::string& fhandle, const std::string& filename, const std::string& owner_vsID) = 0;
};

#endif //JSONRPC_CPP_STUB_ABSTRACTSTUBSERVER_H_
